Redux优点
1、流程规范，按照官方推荐的规范和结合团队风格打造一套属于自己的流程。
2、函数式编程，在reducer中，接受输入，然后输出，不会有副作用发生，幂等性。
3、可追踪性，很容易追踪产生BUG的原因。
Redux缺点
1、流畅太繁琐，需要写各种action，reducer。
2、要想完成异步数据，得配合其他库。
MobX优点
1、学习成本少，基础知识非常简单，跟vue一样的核心原理，响应式编程。
2、写更少的代码，完成更多的事。不会跟Redux一样写非常多的样板代码。
3、使组件更加颗粒化拆分。
MobX缺点
1、过于自由，MobX提供的约定及模版代码很少，如果团队不做一些约定，容易导致团队代码风格不统一。
2、可拓展，可维护性，也许你会担心Mobx能不能适应后期项目发展壮大呢？确实Mobx更适合用在中小型项目中，但这并不表示其不能支撑大型项目，关键在于大型项目通常需要特别注意可拓展性，可维护性，相比而言，规范的Redux更有优势，而Mobx更自由，需要我们自己制定一些规则来确保项目后期拓展，维护难易程度；